//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.11.16 at 04:23:27 PM CET 
//


package org.robotframework.jaxb;

import jakarta.xml.bind.annotation.*;
import java.util.LinkedList;
import java.util.List;
import java.util.stream.Collectors;


/**
 * <p>Java class for Test complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="Test">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element name="kw" type="{}Keyword" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="for" type="{}For" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="if" type="{}If" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="msg" type="{}Message" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="doc" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="tag" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="timeout" type="{}Timeout" minOccurs="0"/>
 *         &lt;element name="status" type="{}Status"/>
 *       &lt;/choice>
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Test")
public class Test extends OutputElement {

    @XmlElements({
            @XmlElement(name = "kw", type = Keyword.class, required = false),
            @XmlElement(name = "for", type = For.class, required = false),
            @XmlElement(name = "if", type = If.class, required = false)
    })
    protected List<OutputElement> kwOrForOrIf = new LinkedList<>();

    @XmlElement(name = "msg", type = String.class)
    protected List<String> msg = new LinkedList<>();
    @XmlElement(name = "tag", type = String.class)
    protected List<String> tags = new LinkedList<>();
    @XmlElement(name = "doc", type = String.class)
    protected String doc;
    @XmlElement(name = "status", type = Status.class)
    protected Status status;
    @XmlElement(name = "timeout", type = Timeout.class)
    protected Timeout timeout;

    @XmlAttribute(name = "id")
    protected String id;

    @Override
    public List<OutputElement> getElements() {
        return kwOrForOrIf;
    }

    public List<OutputElement> getKwOrForOrIf() {
        return kwOrForOrIf;
    }

    public List<Keyword> getFailingSetupTeardown() {
        return kwOrForOrIf.stream()
                .filter(e -> e instanceof Keyword)
                .map(e -> (Keyword) e)
                .filter(e -> e.isSetupOrTearDown() && e.getStatus().getStatus() == BodyItemStatusValue.FAIL)
                .collect(Collectors.toList());
    }

    public List<String> getMsg() {
        return msg;
    }

    public List<String> getTags() {
        return tags;
    }

    public String getDoc() {
        return doc;
    }

    public Status getStatus() {
        return status;
    }

    public Timeout getTimeout() {
        return timeout;
    }

    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
